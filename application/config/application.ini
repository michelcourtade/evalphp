[DB_DataObject]

database	= "mysql://" DB_USERNAME ":" DB_PASSWORD "@" DB_HOST "/" DB_NAME
class_location  = ROOT_DIR "application/models/%s.class.php"
;require_prefix  = ''
;class_prefix = %s.class.php
db_driver = MDB2
debug = 0
                ; default debugging level1

debug_ignore_updates = 0
                ; behaviour changed in > 0.10 so that you have to manually turn of updates
                ; rather than it automatically being done by setting debug to  > 1


dont_die = 1
                ; if you set this to true or 1, then dataobjects will not die
                ; on major errors like database connection etc. or programming errors
                ; - you probably want to do this on a live server - and 
                ; write a pear error handler.. - to send you an email!


dont_use_pear_sequences = 1
                ; If a table does not have a Native (autoincrement etc.) - and it has a primary
                ; key, it is assumed that the table should use pear's getNextID to 
                ; emulate sequences.. - if this is not required set this to 1


;generator_include_regex = /^FOO_.*/i
;generator_exclude_regex = /^tmp_.*/i
                ; include and exclude tables from being read by the generator

build_views = 0
                ;for postgres, you can build dataobjects for views as well 
                ; I believe it postgres also supports updating on views (nice feature)
                ; *** NOTE *** You will have to manually define keys() / sequenceKeys()
                ; As the generator can not recognize these automatically 
                

;generator_strip_schema = 1
		; postgres has a wierd concept of schema's which end up prefixed to
		; the list of tables. - this makes a mess of class/schema generation
		; setting this to 1, makes the generator strip the schema from the table name.


; ---------- DEPRECIATED --------------


;ignore_sequence_keys = 
                ; THIS IS DEPRECIATED NOW - define the method sequenceKey() to return array(false,false)
                ; to stop useage of sequence keys.
                ; see sequenceKey Manual page for more details.


;sequence_{tablename} = {column}
                ; THIS IS DEPRECIATED NOW - define the method sequenceKey() to return array(false,false)
                ; specify which column is autoincremented/nextval'd
;sequence_{tablename} = {column}:{sequence_name}
                ; THIS IS DEPRECIATED NOW - define the method sequenceKey() to return array(false,false)
                ; specify which column is nextval'd, and the sequence name to use for the column.